<?php

namespace Dim\BlogBundle\Repository;

use Doctrine\ORM\EntityManager;
use Doctrine\ORM\NoResultException;
/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository
{

    protected  $em;

    public function __construct(EntityManager $em) {
        $this->em = $em;
    }

    public function getAllArticle()
    {
        $query = $this->em
            ->createQueryBuilder('a')
            ->select('a')
            ->from('DimBlogBundle:Article', 'a', null);

        try {
            $articles = $query->getQuery()->getResult();
        }
        catch(NoResultException $e) {
            $articles = null;
        }
        return $articles;
    }

    public function getArticle($id)
    {
        $query = $this->em
            ->createQueryBuilder('a')
            ->select('a')
            ->from('DimBlogBundle:Article', 'a', null)
            ->where('a.id = :id')
            ->setParameter('id', $id);
        //var_dump($query->getQuery()->getSingleResult()); die;
        try {
            $article = $query->getQuery()->getSingleResult();
        }
        catch(NoResultException $e)
        {
            $article = null;
        }
        return $article;
    }

    /*    public function findLatest($page = 1)
        {
            $query = $this->getEntityManager()
                ->createQuery('
                    SELECT p, t
                    FROM DimBlogBundle:Article p
                    LEFT JOIN p.tags t
                    WHERE p.publishedAt <= :now
                    ORDER BY p.publishedAt DESC
                ')
                ->setParameter('now', new \DateTime())
            ;
            return $this->createPaginator($query, $page);
        }*/
}
