<?php

namespace Dim\BlogBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\Collection;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Article
 *
 * @ORM\Table(name="article")
 * @ORM\Entity(repositoryClass="Dim\BlogBundle\Repository\ArticleRepository")
 */
class Article
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="title", type="string", length=255)
     */
    private $title;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="createdAt", type="datetime")
     */
    private $createdAt;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="updatedAt", type="datetime")
     */
    private $updatedAt;

    /**
     * @var string
     *
     * @ORM\Column(name="content", type="text")
     */
    private $content;

    /**
     * @var bool
     *
     * @ORM\Column(name="display", type="boolean")
     */
    private $display;

    /**
     * One Article has One Image.
     * @ORM\OneToOne(targetEntity="Dim\BlogBundle\Entity\Media")
     * @ORM\JoinColumn(name="media_id", referencedColumnName="id")
     */
    private $media;

    /**
     * Many Articles have Many Categories.
     * @ORM\ManyToMany(targetEntity="Dim\BlogBundle\Entity\Category", inversedBy="articles", cascade={"persist", "remove"})
     * @ORM\JoinTable(name="articles_categories")
     */
    public $categories;

    /**
     * @ORM\OneToMany(targetEntity="Dim\BlogBundle\Entity\Comment", mappedBy="article")
     */
    private $comments;

    /**
     * Many Users have One Article.
     * @ORM\ManyToOne(targetEntity="Dim\UserBundle\Entity\User", inversedBy="article", cascade={"persist", "remove"})
     * @ORM\JoinColumn(name="user_id", referencedColumnName="id")
     */
    private $user;

    public function __construct()
    {
        $this->createdAt = new \DateTime();
        $this->updatedAt = new \DateTime();
        $this->categories = new ArrayCollection();
        $this->comments = new ArrayCollection();
    }


}
